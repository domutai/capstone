// #!/usr/bin/env node

// const app = require('../app');
// const debug = require('debug')('your-project-name:server');
// const http = require('http');
// const config = require('../config');

// const port = config.port;
// app.set('port', port);

// const server = http.createServer(app);
// server.listen(port);
// server.on('error', onError);
// server.on('listening', onListening);

// function onError(error) {
//   if (error.syscall !== 'listen') {
//     throw error;
//   }
//   const bind = typeof port === 'string' ? 'Pipe ' + port : 'Port ' + port;
//   switch (error.code) {
//     case 'EACCES':
//       console.error(bind + ' requires elevated privileges');
//       process.exit(1);
//       break;
//     case 'EADDRINUSE':
//       console.error(bind + ' is already in use');
//       process.exit(1);
//       break;
//     default:
//       throw error;
//   }
// }

// function onListening() {
//   const addr = server.address();
//   const bind = typeof addr === 'string' ? 'pipe ' + addr : 'port ' + addr.port;
//   debug('Listening on ' + bind);
// }


const dotenv = require('dotenv');
dotenv.config();

const config = require('../config');
const {port} = config;

const app = require('../app');

const db = require('../db/models');

// // Check the database connection before starting the app
db.sequelize
  .authenticate()
  .then(() => {
    console.log('Database connection success! Sequelize is ready to use...');

//     // Start listening for connections
    app.listen(port, () => console.log(`Listening on port ${port}...`));
  })
  .catch((err) => {
    console.log('Database connection failure.');
    console.error(err);
  });
